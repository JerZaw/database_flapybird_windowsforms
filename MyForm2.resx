<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAACNCAYAAADyzTVBAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABjgSURBVHhe7Z0LeBTVvcA372yAvDZvIOGhQAwGnyCE
        qCAgyL1XqoAWJKBStaAWglj1QlFLS4AA135ebQ1a5dUY3lQFpfjd1taKt+2tDwgkISQbRK2tL56iyf/+
        //NIZmf/u5nsc2Zzzvf9vpn9z8zuOWfOb8+Zx87aAEAgEHiADQoEAhk2KBAIZNigQCCQYYMCgUCGDQoE
        Ahk2KHBl/vz5d5aXl9/W3aByc/XRnWCDgg6efPLJcTabzYlgbXU7nM8888xQrl66C2xQ0EFFRUUp03C6
        DVVVVYO5eukusEFBB0IQIYjAC5YSJIqJ+YkQhAkKOhCCCEEEXhBDLCGIwAtCECGIwAtmFyRKNw00QhAm
        KOigomKl6EGYeukusEFBB6tXrRrFNZzuwgsvvDCAq5fuAhu0KitXriy9/fbbf1xWVrbAX2bPnr1gdtmc
        BY8tuO7Zqp/nw/rlOVC1PBuhqblY/7Mc+O8nBkCOI8GtgXNMnz4dNm3aBM8//7xXUA5YvHjxtFmzZpVz
        daRCdU51z+0Tq8MGrUpJSUkV1yD8YUFZKsCX6QAtCUiiCcF8fRQP0NgXivrb2TLoefrpp7G6jKWZM2ey
        76GH6h5XZ/eLlWGDVmX8+PHrOnZaVPvO84fyORkAJ3oAHMGPOBJlMihPSJ0NTn+QBYUFiWwZ9FRWVmJ1
        AbS1tXlETdhDsO+hh+oeV2/fF5ECG7QqroJEI/5LsogEaQmDILXRMkaWCUGCBhu0Kq6CdB3uVKncg/TE
        hogfoW2koaY2BmHihEdB6AuCvii0MSFIV2CDVsVdEP97EdMIQqiC0FSFXtfrBfFeZiGIcdigVfG3B+EI
        vyA0nMLeg12mIIZYQYMNWpXgCdILGyJ+BNc4g0yb1EtojjfUXkOLIsiQfkKQQMMGrcq4cZHTg7QdldG+
        lvLACXJU9CDBgg1alTFjxj3N7Tx/uH+mA+Cj8AhCDR+asPdwxiGxCA61pCm91sRacNqQB/2z+DLoWbFi
        BVaXMUFuu+029j30XH/99XRxxWV/RAJs0Gzs2rWr56uvvprwyiuvuPHqqzjFZfvf2N1z7h0lVTcMT4Ub
        RyUjvZRpV+nY7vore8GvHkdBmhOw0WJWmIYcPGzQWpsM79Q44JXn8mDf+t6w9/lcJE/mBYJe58I+nO55
        bhDc9r1RMPaGcTBuHHGDwnjltUxpaSls3boVq1VOnByEmlauXClto30PPWPGjIG5c+fet2/fvmhP+0mF
        9iW+rds+Nits0ExMmTLlCfyGMvTQhN+uvxLg034Ax9OQdAQbd1dpom3V1/ge9UlM4w0B2HucPzIEhg9O
        ZsvK0dzcgFVmLHFScBhN+/fvZ/PE4KR9ipuw+9tssEEzMX369EeZSmbZ81wRDjnUA2ofoWGNW5xpwMFG
        EqQIRhWlsmXVExsbB3X19VhlnSdOBG8YSXv37mXzxUH7FDfBijU/bNBMdE2QoTgcSsYGhptyjc5KSIJc
        AiVDjQkSF4eC1NVhlXVdAH+hJAQJE0IQIUg4YYNmQggiBAknbNBMCEGEIOGEDZoJIYgQJJywQTMhBBGC
        hBM2aCa6JkgRCqJe9e4MplGaCSGIKWCDZmLmzJmLuUrm2PfSCIB/FgA4U5E0nhZc1miHNk8/RjILJhHE
        aDpw4ACbL45bbrnlJ7gJu7/NBhv0lR07dqS89NJL/TZu3NjXXzZt2tR769atjpEjR3r5nbn6e48o6cdO
        i+65HGqevgI2rS1ELlGm6jxRBBtWDYZ3avpAW30vgFrMtgTTQMONCQShdPDgQekBD9XV1fDyyy+z0K0r
        Tz31FEydOhWmTZvmlVtvvRUWLlw4Y8uWLTm0j7l9T2zYsKFvTU2NA7Pg0sZCDRv0lYyMjHe5nRcKuvLg
        tNmTM7En6SM1QtMOucIsiJpwOMR+nh66H8toIqm499CTmJh4BFdvb1/hgA36Sn5+/gGuoMEiSuk9OuDX
        0zNnCsrhHKAIwjROM2ASQYze7n7jjTcqW3SeNm/ezL6HnvT09L/g6m7tLJSwQV8pKCjYzxU0WHgVRPek
        c20Pc+eU3ihIfyGIF9RkVJAJEyYoW3j/fEpGBXE4HO/i6m7tLJSwQV8JtSBuaKUQgviFmnzpQbj3U6Ek
        BAkXJIWB/8jQCqL/5Z5pEIIIQfzGgAwuKOuLHqRz1CQEYYK+YqohljamiwtBOkdNQhAm6CthF8QrdBAv
        P0RNFqSfIkhnMI03FAhBIk+QPn36/A9XULMx5+Y8gJMDARqwIdZHK8S404DUKVfcQ32cIgSJPEEuvfTS
        mpSUFDp/bVpSUnrCndMGwcm/ToATbxdBy5+Kwfk2TzMu+/KvudhgUZJQ35oiBLGGIHv37o1LTU39G10l
        z8zM/DMHFYR6D1r/s88+g08//dSEfCJNv/jiM/h11U8hs1ciFDgSoF+GZ7KTE2D5/XRflx0brRDEG91W
        EHpMC5d5PbSDnE4nbmL+tGHDS2wZOBaUhenRo0IQawiye/duQ4LY7XY4fvw4bhKYHRQ4KD8ArSC/pvTi
        iy/q8q8cwDNnwaQnK7YIQTpDCNIJJEhjYyNuYjZBXKHkLohnwvbwaiGIECQcUBKCdI6ahCBMUIsQhAQJ
        wz9MCUGEIKEAWmXaX2PiBPH0exIhiBDEK0IQeYjVhg1W24ClmxyDeX3EkyDc7TSIECQ4sEEt3WWI1VVB
        WkMkiNuzef0QpLW11eW1t3XVJARhgloiURD6g3yuDBwLZ6cB/AMP0o9hdUhg43UDJaFpIIdhkiBFMHyI
        sSGWzRYDjcppdiOJqxstapoxYwbzWe6MHTtW2UIIwmIlQbZt2wbZ2dmQn5/PUqBMe/fuAw/94CJo+uPF
        0HAgF+oP5CB5OnrD0f29ofn3GdBaS/8jwjR2X0BBLhwZANPGpkBBVgIMzOMZgPRHBhXY4U9/fB2cLS3Q
        1NTkkWPHjsFXX30l1QNXPypqKi8v91pXBC2fNWuWsoUQhMVKgly4cAG+/vprOHXqFJw+fdqdUzIXLnwD
        a1cvA3tsLKQmxUCKnh7ytEdCDFxdaIczH+BwTDcU84e2I/Fw6u/J8Plfs+CLv+UiOW58jnz5f9lw8p1C
        KB6SDImJdkjqkSST5E4sloWeQEKJqx8tlM6dOyfVFVtPCrT87Nmz0vrc+2ihJARhKsZMdCVVVq5hy6tn
        UN9EOP1BdkAFkYZsdUi9MvVEgw3OHcqEwX3j2bzpWb16tVQ2rm70dCVx2+uhJARhKsY6dOSfEv3hpVrG
        9gN55kCZ/kAz8IJwMO+Pkpz+IDOg/3IbLCgJQZiKsSKUtIJ04P4UlVAIQmfOuLgqSMe/3GLeooiO/GkR
        ghiHDWrpXoK4nwY1kyDywyXotLJyelk9xSwJov0baI0gjCRCEOOwQS3BF8S1UYYPysd3LjFKvCDuhG6I
        peBVEA1CEL9gg1qCLwg1ynBLwshBV+AxrTGrIFq8CcIgBDEOG9TiSRD9lWdzD7FcBWjFxo+R9tda9Lel
        VK4xdhYr/IJkQyF3kG7hHoR+xYqru7XJUMIGtXQI4j7u1kLn3xsbm3ATqngjyBVGDbVVmQ8dXH46wEzJ
        U0xGT/OaoQcZ0sUeJFypWw6xkhIToKnpKG7yHUIXjTjOtU/1Q5rQga0fvkHOK3nRQ3lUaYN1a1ew5dUT
        NkGO4nGIJEgGDMxNYPOm57/WytdBwpW2b9/O5kuPxXoQ79CV5sN/vBe+PTkDzjunIVN1U3X+e3DmxAPQ
        1noCGyt9U+sbMBfzF3WIhSVCMc6feQ1OHb8bvnHeCudbpmvypk5l4LM5sGrJaLa8esImiPTfJjb47rAd
        3tyQBTueyYXdvyTy3KZ7cPrbqv7wyAMjYNKkSXDTTTeFnJtvvhkuu+wytg71xMfH148dO/YXmNdVEydO
        9Mi4cePWlZWVLdC220DBBrUYFcRhj4FDrxdKV33bDnngsA1acXqutj+0fXcYv5+DIYMekkMFPxDOwNkv
        1sGZ91Jc8uWWTwRaYmD14gy2vHrCOsRS/wCoKU7KMzhx6oxXplpiAb5IgwVlKWwZrEywehs2qKVLgrwx
        DOAY7ghvd7XW2uB83WAUpDbEgtA8fiAOo859+Qs4+2EW5kfNp3t+pWsOJ5Kg8sdZbHn1hFUQt0cSUR6U
        fLj8exbGTvSSbuHnymBl6KmeapsNJGxQS1AFwQaLTTeEB+lYIjgN5yVBsDF7yycta+mBgmSz5dUT3h4E
        ew2XGOVByYcQxC/YoBbr9yBa8AO7JAj1IBYQxDCYNyFIl2CDWrwKojnH7osgZAjfkAMNDbHUg/QzBgSh
        OHLCzgyx+FPd5hBE+WzqNVx6DhUqU6QK0s+cPYh6wdA6PchZF0E8/4EOlkESxHgPcub9cApiU34G3BGj
        edcbHKlMogfpCmxQizdBtFfTJUH2oyCNxgRpbQ29IHQFxFgPQuCyzoZYmpsBxRArvJj+GCQDBTnsUw+i
        h2/cgQE/EE6hIE95EUSN4VQniPqFoL/Nhgi3IJ57QqR9uIV5E4J0CTaoxfBBemIMHNlfjD1IjNxIVGin
        6F5/Uz8I2lqPsoLIxyWBQ/4QzWs4J/Ug5w5lueaL40QiVD5s7DTvkAI7CpIjb6dvoCFAkkOffxXtPvio
        R0QKkl9QcAB3LhYwsLBBLTt37kzBDDg7o0eMzfn+7yYBNBfDt/VDkEKeukFw7hg9AeP3CN3cWI/Q42po
        qqK+bggwx5BauHBqHZypvRrzM9g9fxrg5OXYg/SXdkAMEusBWl7UNw7OfJCuNEj3Bhxc8FjqSBy01vWD
        C0w52mnAMn18JTw2qw/EY55TkTSFdAX1NYeRdYhQrkP0QIbmZv0Zd65b+/UXNugLb75RnfXvN1z0Wukw
        B4y5It0jpcPSYMqYbGh5bzqcbZ4GpxqnIzSdqqCNqVMt/iybChc+LoNdvx4PI4emwfVM/rSUFDvg0Xv6
        w1s1V8Cbm4vhgAd+t3EYHNw2EL6tpf8RwepgG3EQUM9W1dlwyNgLZk9OwzzzZSGovNde5oDHJ+TAvln9
        4dXb8lleU+CWaTHHOn3htRn94ZfTi2v+bfilNSOuGfHCNddco2EUMlKaHzFixAtXXHHFZq79eoIN+kpu
        bu4f6Nu0M9KToqHlrTwcFsTAd4dDSTT2cJnwyycHs/niWDg7A+BfmQBNSbhtD88cT4RWunGQa8jBRrpZ
        MRMG5Bp7aMPKUakAj/QCWJAQGTyUBP9770WQxZSVwbljx44Urv1ysEFfoQMlJkNu5Dji4KO3cbxOT+uQ
        vnFDSIsD1q8oZPPFUT7HgcciKIe6fa3mvdxgGm8oQEHOvG/8B1OrS7B9LIwHmId5jgQejIZ3786HftHy
        n7R2Bh1Xc+2Xgw36StcFUXcybh70Bobf7jQcacnQCKL+xiUKopR/wFX/CVe9IEgHtGH5+wOv6OpL+T2I
        L4K0WRz4IfJgDBy8u4ARhL+oa3pBctNJkGylB9HueBmPT+/wCfoMrEwURLqIhoI8z/YgamW6Vqo5BOE+
        Wy6XNN+dBSH0gjC/otRiEUFygf6GWXvlV4WL+U9HD8ILwhM+Qejz3D9Tut6hi3kThLtmE6mCFOh6EK7s
        hOUFCQ7cEAvp5NvGEoIcJUGyu6cgP8TyPxCLxyDdRpBgngnCbFpGEE8w9eNFEI5IFSRiDtJJkJN0DNKA
        hZQurGnwepbID9T3bUnv0lmshWESRL51RMkzoc5z9UNnsT7INPzQBlmQWPkAlxqZ1bHKWSx6CgWXIT09
        E2zwz78VAZxESZxIiw6KcXG/yQT4fDC8uKqYzRfHwjscmE9sUHXYoI7G4VQDvdajXa5fx1Ncv6x9eSJA
        cypTDh0nsqC1oRAKDT60YXUpluk/M6BtUUo7rQramB7tOp7W7cr7aNfjtjGyTttDuG8eSYd35hVKV9W5
        8upwbt++PY1rvxxs0FeWLFky+b777ps7f/78Oz0xD1nwwB3lKx8prln72GBY++gg5GIFmh8E65RpoFnz
        2MXw1JIiWHrvIJgzMQ/umpgDd0/KlbhrojLVvJ45Lgc2LsuArw/2gK/eikcSXPkDg7d1PMX1yxT+9VYq
        bKnoDasfxrp5jC8TQfX11OJCWFSSDQsvz4TyyzJYFtL0yix4fHgOrLmhN1Rel8uyRoFbpsUM66y+LgdW
        j8mDn0wo3PnoPXeUz79f3+bub5+fN2/enfdg4tquJ9hgKEjumXSYsTsk3FLigI/fKIITu7OhZVcOtOxU
        pjpoedNWOxzbYoOGENP4Gxt8WJ0DxXnGhk125C8/6IPfpplw4aEMmcWOjnnk28U4XFzaGx66LFXaRns/
        WZyCft7TOupr7XIuHux1CCrLwByT34vVVdIdGX/R7uBQMu26TEkAJzbCZgM0hYHmahscrh4IVw3oxZZB
        T6otGt4rw5HDA1i9NC6n4wvuGKM8HgUx9p5Wom9Bv/DczRssjB6vBAMSxLkrL2yN3wiyIAPgaoOCpKEg
        fy9LlwThzvYQsiCJESkInSDi2pm/sMFQIATxjmdB+NsnZEGoB4li5SCEIF2HDYYCIYh3PAtCpzLdJRGC
        CEECRiQOsegYRAjCtzV/YIOhQAjiHV8EeU8cg7i0sUDABkOBEMQ7PvUgs4QggYYNhgIhiHeMC0LHI1Eo
        SBS8R4Lcj9WrysBRbkdBknXvYW6i6P8WmbiWiBOEHm3PFTQUWEEQukZTi4IU5/Vky6AnATl0dxbA4kSU
        IAFgIYHz0hRRY4+lwaJhkfd094gTpKKionTp0qWTly1bNikQLF++fOzAgQNf4ypPjxUEacIepK46Ddbc
        kwI/ujUVFk1zQPn0dCifhtBUM79ougMWT82CR0alw5Krk2HJVb0QmrqzdEQaPH51BjxZkg4/HZFsWpZf
        kwwLMZ8psR03INLt655uYY84QYIB/dEKV3l6rCDIcYWPd8bCp7sTkSTEzvLZnkRo3J4H/RxxbHn1VI5O
        A3g0GXuVeE0Pg/PtKDF2GaJdpl9Ot9F7W27ovXG6KB5O3p8N+Ymx7fkWgvjJ+PHj13GVp8cSPYgGyqc3
        nC/b4MNN6XBRjsG7eUtS5YbIHaOYBTyWOj43DQriOwTxhhDEAJEqSGc0oyCHSJBsz4Jov3m1P5hqRbgz
        XuGGBGmam4qCxLiUwxNCEAN0Z0E+3JQGF7f3IPKZLX25Vazwi0IhSBAQghgdYglBjMIGrUr3FiRdCMK0
        CX9hg1ZFCCIECTRs0KoIQYQggYYNWpVrr732Wa7y9NxSkg6f7u0Dn2y3wcfbow0QpcAti8b3iYaT26LY
        xhsKZEEckO8w9vDqSjrN+3ACwINYbQ9EyTyoQ413tky/XL9Mv1y/DreMpj/C+r4vHfqJ07yB4957771n
        yJAhu4cNG1bNUTxsWE3x0Et23jmlaNvOykLYvSIDdlVkwa4VSEUmP22fR9zWkdn582x4vTINjm2JZxtw
        sCFBajf3gslX9YBL+tqhuEChnzpNlKaX4nRovh2euC4DDpZlwtu3p7Xzp+938DbhYZmEZpmEbpl+uXZb
        Q++N04Mz0mHHrX0gW/Qgoef59U8XU6XG2qICQhQyBIc3hzemg7Oab8TBovk3as8VDQ3VyVBXnQ71Oupe
        JhxQ/3IanNiTB/dNypAegpCE+TYrdiQB88heOWce9icECSBVVesH6yvYX+gi3aGNeGwTYkG00B3A9Pk0
        Vef1r/+x2w5zJ6exZbAMQpDgUlX1q8L2yqXKNnA7dWcMwh7k0MaMkAvSXC33IOpUC93L1ajJD52U+GR3
        EvxgsvzYHyvQfqu7tJ/UOMVcn6IoBAkgVVXP+deDuHyDyTuQziCFQ5DOIEnUeVmQHiiINXsQ15sVXb/U
        hCABpKqqyjdBmK5dxWyCSHcD6/JiSUGYOueOS4QgASRyBKFhFX96WS8Ivba2IB09hhAkyPgsiA5tlx/O
        HqR5SxTiGusYWskC0bGIJMguqw6xorGu6YyhJqb5whKCBBAXQXS9groDtDvCZad4ILxDrOj2eVkUtWch
        NMsQKx+DuKDbb0KQAOJXD+JhmEWCHN7oMN1BuhbKG/0yUSuIkQciWAEhSAB59tlnh3KV7A99U23QUNMH
        Ptlph5M7zMnHmLcv9mXAXRMj76ENmZmZkfV093CyZ8+epOHDh784evToX/lK6ehSCZovGV1a9R8TrtxY
        tWTotg0/uQheWnqxxAYJfL1soBLDeWl5xzrqel1bB/G6jhKndTT5ofkNTxbBvO9fvrmkpKRqNOW/lC+f
        lRg5cmTV1KlTl3D72l/YoMA3Em02ZwxWKfcfFmaBvm3XrnpiApd/gTtsUOAbMXFxx/RdvxmpqFhZyuVf
        4A4bFPhGXFxc2B6G1xXomWRc/gXusEGBb8THmrwHUc7ACUGMwwYFvmGdHkQMsYzCBgW+IQSJPNigwDfE
        MUjkwQYFviEEiTzYoMA3YmJiLHGad8WKFddx+Re4wwYFvmG32w+TJLGxsaZCmycUxLlq1apRXP4F7rBB
        gUAgwwYFAoEMGxQIBDJsUCAQyLBBgUAgwwYFAoEMGxQIBATY/h+Ph2ePP+wo+AAAAABJRU5ErkJggg==
</value>
  </data>
</root>